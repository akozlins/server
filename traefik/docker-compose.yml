#

x-service: &service
  dns_search: .
  logging: { options: { max-size: "1m" } }
  restart: "always"
  stop_grace_period: "5s"
  cap_drop: [ "ALL" ]
  read_only: true
  security_opt: [ "no-new-privileges:true" ]
  user: "1000:1000"
  mem_limit: 256m

services:

  traefik:
    <<: *service
    image: "traefik"
    command:
      - --accesslog=true
      - --api.basePath=/traefik
      - --api.dashboard=true
      #- --entrypoints.http.address=:80
      #- --entrypoints.http.http.redirections.entrypoint.to=https
      #- --entrypoints.http.http.redirections.entrypoint.scheme=https
      - --entrypoints.https.address=:443
      #- --entryPoints.https.forwardedHeaders.trustedIPs=127.0.0.0/8
      #- --entrypoints.https.http.middlewares=auth@file
      - --entrypoints.https.http.tls=true
      - --entrypoints.https.http3
      - --global.checknewversion=false
      - --global.sendanonymoususage=false
      - --log.level=WARN
      #- --ping
      - --providers.docker=true
      - --providers.docker.endpoint=tcp://docker_sock:2375
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik
      - --providers.file.directory=/etc/traefik
      - --providers.file.watch=true
    depends_on: [ "docker_sock" ]
    environment:
      - "DOMAIN=${DOMAIN:?}"
      - "HOST=${HOST:?}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.authelia.forwardAuth.address=http://authelia:9091/authelia/api/authz/forward-auth"
      - "traefik.http.middlewares.authelia.forwardAuth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email"
      - "traefik.http.middlewares.authelia.forwardAuth.trustForwardHeader=true"
      # basic auth
      - "traefik.http.middlewares.authelia-legacy.forwardAuth.address=http://authelia:9091/authelia/api/verify?auth=basic"
      - "traefik.http.middlewares.authelia-legacy.forwardAuth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email"
      - "traefik.http.middlewares.authelia-legacy.forwardAuth.trustForwardHeader=true"
      # traefik api endpoint
      - "traefik.http.routers.api.middlewares=auth@file"
      - "traefik.http.routers.api.rule=PathPrefix(`/traefik/`)"
      - "traefik.http.routers.api.service=api@internal"
    networks: { "default", "inet", "traefik" : { ipv4_address: "${TRAEFIK_SUBNET:?}.254" } }
    ports:
      #- "0.0.0.0:80:80"
      - "0.0.0.0:443:443/tcp"
      - "0.0.0.0:443:443/udp"
      - "[::]:443:443/tcp"
      - "[::]:443:443/udp"
    volumes:
      - "./traefik:/etc/traefik"
      - "../etc/letsencrypt/live:/etc/letsencrypt/live:ro"

  authelia:
    <<: *service
    image: "authelia/authelia"
    depends_on: [ "redis", "lldap" ]
    environment:
      - "AUTHELIA_LOG_LEVEL=info"
      - "DOMAIN=${DOMAIN:?}"
      - "LDAP_BASE_DN=${LDAP_BASE_DN:?}"
      - "HOST=${HOST:?}"
      - "MACHINE_ID=${MACHINE_ID:?}"
      - "X_AUTHELIA_CONFIG_FILTERS=template"
    labels:
      - "traefik.docker.network=traefik_default"
      - "traefik.enable=true"
      - "traefik.http.routers.authelia.rule=HostRegexp(`^auth(-[0-9a-z]+)?[.]`) || PathRegexp(`^/authelia($|/)`)"
      - "traefik.http.services.authelia.loadbalancer.server.port=9091"
    volumes:
      - "./authelia:/config:rw"

  redis:
    <<: *service
    image: "valkey/valkey"
    # <https://github.com/redis/redis/blob/unstable/redis.conf>
    command: valkey-server --bind 0.0.0.0
    volumes:
      - "./.local/redis:/data"

  lldap:
    <<: *service
    image: "lldap/lldap:latest-debian-rootless"
    environment:
      - "LLDAP_LDAP_BASE_DN=${LDAP_BASE_DN:?}"
    labels:
      - "traefik.docker.network=traefik_default"
      - "traefik.enable=true"
      - "traefik.http.middlewares.lldap.stripprefix.prefixes=/lldap"
      - "traefik.http.routers.lldap.middlewares=auth@file,lldap"
      - "traefik.http.routers.lldap.rule=HostRegexp(`^lldap(-[0-9a-z]+)?[.]`) || PathRegexp(`^/lldap($|/)`)"
      - "traefik.http.services.lldap.loadbalancer.server.port=17170"
    volumes:
      - "./authelia/lldap_data:/data:rw"

  dozzle:
    <<: *service
    image: "amir20/dozzle"
    depends_on: [ "docker_sock" ]
    environment:
      - "DOZZLE_BASE=/dozzle"
      - "DOZZLE_NO_ANALYTICS=true"
      - "DOZZLE_REMOTE_HOST=tcp://docker_sock:2375"
    labels:
      - "traefik.docker.network=traefik_default"
      - "traefik.enable=true"
      - "traefik.http.routers.dozzle.middlewares=auth@file"
      - "traefik.http.routers.dozzle.rule=PathPrefix(`/dozzle/`)"
      - "traefik.http.services.dozzle.loadbalancer.server.port=8080"

  docker_sock:
    <<: *service
    image: "caddy"
    cap_add: [ "CAP_NET_BIND_SERVICE" ]
    group_add: [ "${DOCKER_GID:?}" ]
    volumes:
      - "./Caddyfile.docker_sock:/etc/caddy/Caddyfile:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"

networks:
  default: { internal: true }
  inet: { external: true }
  traefik: { external: true }
