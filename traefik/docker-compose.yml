#

version: "3.9"

x-service:
  &service
  env_file: .env
  logging: { options: { max-size: "1m" } }
  restart: "always"
  stop_grace_period: "5s"

services:

  traefik:
    << : *service
    image: "traefik:latest"
    command:
      - --accesslog=true
      - --api.dashboard=true
      - --entrypoints.http.address=:80
      - --entrypoints.http.http.redirections.entrypoint.to=https
      - --entrypoints.http.http.redirections.entrypoint.scheme=https
      - --entrypoints.https.address=:443
      - --entrypoints.https.http.tls=true
      - --global.checknewversion=false
      - --global.sendanonymoususage=false
      - --log.level=WARN
      - --ping
      - --providers.docker=true
      - --providers.docker.endpoint=tcp://docker_sock:2375
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik
      - --providers.file.directory=/etc/traefik
    depends_on: [ "docker_sock" ]
    healthcheck:
      test: "traefik healthcheck --ping || exit 1"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.middlewares=auth@file"
      - "traefik.http.routers.api.rule=Host(`traefik.${DOMAIN:?}`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.tls=true"
    networks: [ "default", "traefik", "traefik_jenkins", "traefik_jupyter", "traefik_portainer", "traefik_upkuma" ]
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
#      - "0.0.0.0:8080:8080"
    volumes:
      - "./traefik:/etc/traefik"
      - "./letsencrypt/live:/etc/letsencrypt/live:ro"

  nginx:
    << : *service
    image: "nginx:alpine"
    healthcheck:
      test: "curl --fail http://127.0.0.1/index.html || exit 1"
#    ports:
#      - "0.0.0.0:80:80"
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./conf.d:/etc/nginx/templates:ro"
      - "/opt/html:/opt/html:ro"
      - "socat:/run/socat:rw"
      - "./letsencrypt/live:/etc/letsencrypt/live:ro"
    labels:
      - "traefik.docker.network=traefik_default"
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=PathPrefix(`/`)"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"

  socat:
    << : *service
    build: "../socat"
    command:
      - "/etc/socat/run.sh"
      - "syncthing:127.0.0.1:8384"
    network_mode: "host"
    volumes:
      - "socat:/run/socat:rw"
      - "../socat:/etc/socat:ro"

  sslh:
    << : *service
    build: "../sslh"
    command: [ "sslh", "-f",
      "--verbose=1",
      "--listen=0.0.0.0:443",
      "--tls=nginx:443",
      "--anyprot=nginx:443",
      "--on-timeout=anyprot"
    ]
    depends_on: [ "nginx" ]
    labels:
      - "traefik.docker.network=traefik_default"
      - "traefik.enable=true"
      - "traefik.tcp.routers.sslh.rule=HostSNI(`tls.${DOMAIN:?}`)"
      - "traefik.tcp.routers.sslh.tls.passthrough=true"
      - "traefik.tcp.services.sslh.loadbalancer.server.port=443"
    profiles: [ "TEST" ]

  whoami:
    << : *service
    image: "containous/whoami"
    labels:
      - "traefik.docker.network=traefik_default"
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=PathPrefix(`/whoami`)"
      - "traefik.http.routers.whoami.tls=true"
      - "traefik.http.services.whoami.loadbalancer.server.port=80"

  docker_sock:
    image: "tecnativa/docker-socket-proxy"
    environment:
      - "CONTAINERS=1"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

volumes:
  socat:
    driver_opts:
      type: tmpfs
      device: tmpfs

networks:
  default:
  traefik: { external: true }
  traefik_jenkins: { external: true }
  traefik_jupyter: { external: true }
  traefik_mailu: { external: true }
  traefik_portainer: { external: true }
  traefik_upkuma: { external: true }
