#

x-service: &service
  dns_search: .
  logging: { options: { max-size: "1m" } }
  restart: "always"
  stop_grace_period: "5s"
  cap_drop: [ "ALL" ]
  read_only: true
  security_opt: [ "no-new-privileges:true" ]
  user: "1000:1000"
  mem_limit: 256m

services:

  watchtower:
    <<: *service
    image: "containrrr/watchtower"
    command: --cleanup --remove-volumes --rolling-restart --interval=86400
    environment:
      WATCHTOWER_NOTIFICATIONS_HOSTNAME: '${HOST:?}'
      WATCHTOWER_NOTIFICATIONS_LEVEL: 'info'
      WATCHTOWER_NOTIFICATION_REPORT: 'true'
      # <https://containrrr.dev/watchtower/template-preview/>
      WATCHTOWER_NOTIFICATION_TEMPLATE: |
        {{- if .Report -}}{{- with .Report -}}{{- if ( or .Updated .Failed ) -}}
        {
          "message": "watchtower@${HOST:?}:
              {{- range .Updated -}}\n- {{.State}}: {{.Name}} ({{.ImageName}}) {{.CurrentImageID.ShortID}} -> {{.LatestImageID.ShortID}}{{- end -}}
              {{- range .Failed -}}\n- {{.State}}: {{.Name}} ({{.ImageName}}) {{.Error}}{{- end -}}
          ",
          "channel_id": "${WATCHTOWER_MM_CHANNEL:?}"
        }
        {{- end -}}{{- end -}}{{- end -}}
      WATCHTOWER_NOTIFICATION_URL: 'generic://${WATCHTOWER_MM_URL:?}/api/v4/posts?@Authorization=Bearer%20${WATCHTOWER_MM_TOKEN:?}'
    group_add: [ "${DOCKER_GID:?}" ]
    networks: { "inet" }
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

networks:
  inet: { external: true }
