#

version: "3.9"

x-service:
  &service
  env_file: .env
  logging: { options: { max-size: "1m" } }
  restart: "always"
  stop_grace_period: "5s"

services:

  nginx:
    << : *service
    image: "nginx:alpine"
#    command: [nginx-debug, '-g', 'daemon off;']
    depends_on: [ "traefik" ]
    networks: [ "default", "backend" ]
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:8443"
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./conf.d:/etc/nginx/templates:ro"
      - "./.cache/logs:/etc/nginx/logs:rw"
      - "/opt/html:/opt/html:ro"
      - "/etc/letsencrypt:/etc/letsencrypt:ro"
#      - "./letsencrypt:/etc/letsencrypt:ro"
      - "socat:/run/socat:rw"
    healthcheck:
      test: "curl --fail http://127.0.0.1:80 || exit 1"

  # create unix sockets that redirect to 127.0.0.1:$port on host network
  socat:
    << : *service
    build: "./socat"
    command: >
      /etc/socat/run.sh
      ssh:127.0.0.1:1022
      2580 8008 8053 8080
      syncthing:127.0.0.1:8384
    network_mode: "host"
    volumes:
      - "socat:/run/socat:rw"
      - ./socat:/etc/socat:ro

  sslh:
    << : *service
    build: "./sslh"
    command: --listen=0.0.0.0:443 --anyprot=127.0.0.1:1194 --on-timeout=anyprot
    profiles: [ "DISABLE" ]

  traefik:
    << : *service
    image: "traefik:latest"
    environment:
      - "TRAEFIK_GLOBAL_CHECKNEWVERSION=false"
      - "TRAEFIK_GLOBAL_SENDANONYMOUSUSAGE=false"
    networks: [ "default", "backend" ]
#    ports:
#      - "0.0.0.0:80:80"
#      - "0.0.0.0:443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./traefik.yml:/etc/traefik/traefik.yml"
    labels:
      - "traefik.enable=false"
      - "traefik.http.routers.traefik.rule=(PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"

volumes:
  socat:
    driver_opts:
      type: tmpfs
      device: tmpfs

networks:
  backend:
    external: true
