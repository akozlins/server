#

version: "3.9"

x-service: &service
  logging: { options: { max-size: "1m" } }
  restart: "always"
  stop_grace_period: "5s"

services:

  nginx:
    << : *service
    image: "nginx:alpine"
    environment:
      - "DOMAIN=${DOMAIN:?}"
    healthcheck:
      test: "curl --fail http://127.0.0.1:8080/index.html || exit 1"
    networks: [ "default", "traefik" ]
#    ports: [ "0.0.0.0:8080:8080" ]
    volumes:
      - "./conf.d:/etc/nginx/templates:ro"
      - "./nginx.conf:/etc/nginx/nginx.conf:ro"
      - "../letsencrypt:/etc/letsencrypt:ro"
      - "/opt/html:/opt/html:ro"
      - "socat:/run/socat:rw"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.priority=1"
      - "traefik.http.routers.nginx.rule=PathPrefix(`/`) || HostRegexp(`nginx.{host:.+}`)"
      - "traefik.http.services.nginx.loadbalancer.server.port=8080"

  socat:
    << : *service
    build: "../socat"
    command:
      - "/etc/socat/run.sh"
      - "syncthing:127.0.0.1:8384"
    network_mode: "host"
    volumes:
      - "socat:/run/socat:rw"
      - "../socat:/etc/socat:ro"

  sslh:
    << : *service
    build: "../sslh"
    command: [ "sslh", "-f",
      "--verbose=1",
      "--listen=0.0.0.0:8080",
      "--anyprot=nginx:8080",
      "--on-timeout=anyprot"
    ]
    depends_on: [ "nginx" ]
    ports: [ "0.0.0.0:80:8080" ]
#    profiles: [ "TEST" ]

  whoami:
    << : *service
    image: "containous/whoami"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.middlewares=authelia@docker"
      - "traefik.http.routers.whoami.rule=PathPrefix(`/whoami`)"
      - "traefik.http.routers.whoami.tls=true"
      - "traefik.http.services.whoami.loadbalancer.server.port=80"
    networks: [ "default", "traefik" ]

volumes:
  socat:
    driver_opts:
      type: tmpfs
      device: tmpfs

networks:
  default:
  traefik: { external: true }
