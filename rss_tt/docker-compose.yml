#

x-service: &service
  logging: { options: { max-size: "1m" } }
  restart: "always"
  stop_grace_period: "5s"

services:

  db:
    << : *service
    image: "postgres:alpine"
    environment:
      - "POSTGRES_DB=db"
      - "POSTGRES_PASSWORD=${DB_PASSWORD:?}"
      - "POSTGRES_USER=${DB_USER:?}"
    healthcheck:
      test: "/backup/backup.sh || exit 1"
      interval: 30s
      start_period: 30s
    networks: [ "default", ]
    volumes:
      - "db:/var/lib/postgresql/data"
      - "./backup:/backup:rw"

  php:
    << : *service
    build: { context: ".", dockerfile: "./Dockerfile.php" }
    command: [ "/run.sh", ]
    depends_on: [ "db", ]
    environment:
      - "TTRSS_DB_HOST=db"
      - "TTRSS_DB_NAME=db"
      - "TTRSS_DB_PASS=${DB_PASSWORD:?}"
      - "TTRSS_DB_USER=${DB_USER:?}"
      - "TTRSS_PHP_EXECUTABLE=/usr/bin/php"
      - "TTRSS_PLUGINS=auth_internal"
      - "TTRSS_SELF_URL_PATH=/${ROUTE:?}"
      # default lifetime of a session cookie in seconds
      # (0 means cookie will be deleted when browser closes)
      - "TTRSS_SESSION_COOKIE_LIFETIME=31415927"
    networks: [ "default", "inet", ]
    volumes:
      - "./run.sh:/run.sh:ro"
      - "./.local:/var/www"

  nginx:
    << : *service
    image: "nginx:alpine"
    depends_on: [ "php", ]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${ROUTE:?}.rule=PathPrefix(`/${ROUTE:?}`)"
      - "traefik.http.services.${ROUTE:?}.loadbalancer.server.port=8080"
    networks: [ "default", "traefik", ]
#    ports:[ "127.0.0.1:8080:8080", ]
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./.local:/var/www"

volumes:
  db:

networks:
  default: { internal: true }
  inet: { external: true }
  traefik: { external: true }
