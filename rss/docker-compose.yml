#

x-service: &service
  logging: { options: { max-size: "1m" } }
  restart: "always"
  stop_grace_period: "5s"
  cap_drop: [ "ALL" ]
  read_only: true
  security_opt: [ "no-new-privileges:true" ]
  user: '1000:1000'

services:

  postgres:
    << : *service
    image: "postgres"
    environment:
      - "POSTGRES_DB=db"
      - "POSTGRES_PASSWORD=${DB_PASSWORD:?}"
      - "POSTGRES_USER=${DB_USER:?}"
    healthcheck:
      test: "/backup/backup.sh || exit 1"
      interval: 30s
      start_period: 30s
    networks: [ "default" ]
    volumes:
      - "./.local/postgres:/var/lib/postgresql/data"
      - "./backup:/backup:rw"

  php:
    << : *service
    build: { context: ".", dockerfile: "./Dockerfile.php" }
    command: [ "/run.sh" ]
    depends_on: [ "postgres" ]
    environment:
      - "TTRSS_DB_HOST=postgres"
      - "TTRSS_DB_NAME=db"
      - "TTRSS_DB_PASS=${DB_PASSWORD:?}"
      - "TTRSS_DB_USER=${DB_USER:?}"
      - "TTRSS_PHP_EXECUTABLE=php"
      - "TTRSS_PLUGINS=auth_remote"
      - "TTRSS_SELF_URL_PATH=/tt"
      # default lifetime of a session cookie in seconds
      # (0 means cookie will be deleted when browser closes)
      - "TTRSS_SESSION_COOKIE_LIFETIME=31415927"
    networks: [ "default", "inet" ]
    #ports:[ "127.0.0.1:9000:9000" ]
    volumes:
      - "./run-tt.sh:/run.sh:ro"
      - "./.local:/var/www"

  caddy:
    << : *service
    image: "caddy"
    cap_add: [ "CAP_NET_BIND_SERVICE" ]
    depends_on: [ "php" ]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rss.middlewares=auth@file"
      - "traefik.http.routers.rss.rule=HostRegexp(`^rss(-[0-9a-z]+)?[.]`) && PathRegexp(`^/(tt|fresh)/`)"
      - "traefik.http.services.rss.loadbalancer.server.port=8080"
    networks: [ "default", "traefik" ]
    volumes:
      - "./Caddyfile:/etc/caddy/Caddyfile:ro"
      - "./.local:/var/www:ro"

networks:
  default: { internal: true }
  inet: { external: true }
  traefik: { external: true }
