#

x-service: &service
  logging: { options: { max-size: "1m" } }
  restart: "always"
  stop_grace_period: "5s"
  cap_drop: [ "ALL" ]
  read_only: true
  security_opt: [ "no-new-privileges:true" ]

services:

  unbound:
    << : *service
    build: { context: ".", dockerfile: "./Dockerfile.unbound" }
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.unbound.rule=HostSNIRegexp(`^dot[.]`)"
      - "traefik.tcp.routers.unbound.tls=true"
      - "traefik.tcp.services.unbound.loadbalancer.server.port=53"
    networks: [ "inet", "traefik" ]
    volumes:
      - "./unbound.conf:/etc/unbound/unbound.conf:ro"

  doh:
    << : *service
    build: { context: ".", dockerfile: "./Dockerfile.doh-server" }
    depends_on: [ "unbound" ]
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.doh.replacepath.path=/doh"
      - "traefik.http.routers.doh.middlewares=doh"
      - "traefik.http.routers.doh.rule=PathRegexp(`^/doh($|/.+)`)"
      - "traefik.http.services.doh.loadbalancer.server.port=8053"
    network_mode: "service:unbound"
    volumes:
      - "./doh-server.conf:/doh-server.conf:ro"

  bind:
    << : *service
    build: { context: ".", dockerfile: "./Dockerfile.bind" }
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.bind.replacepath.path=/dns-query"
      - "traefik.http.routers.bind.middlewares=bind"
      - "traefik.http.routers.bind.rule=PathRegexp(`^/bind($|/.+)`)"
      - "traefik.http.services.bind.loadbalancer.server.port=8080"
      - "traefik.http.services.bind.loadbalancer.server.scheme=h2c" # grpc
    network_mode: "service:unbound"
    tmpfs: [ "/tmp:mode=777,exec" ]
    volumes:
      - "./named.conf:/etc/bind/named.conf:ro"

networks:
  inet: { external: true }
  traefik: { external: true }
